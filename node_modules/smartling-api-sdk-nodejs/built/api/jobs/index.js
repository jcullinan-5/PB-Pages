"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmartlingJobsApi = void 0;
const index_1 = require("../base/index");
class SmartlingJobsApi extends index_1.SmartlingBaseApi {
    constructor(smartlingApiBaseUrl, authApi, logger) {
        super(logger);
        this.authApi = authApi;
        this.entrypoint = `${smartlingApiBaseUrl}/jobs-api/v3/projects`;
    }
    createJob(projectId, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("post", `${this.entrypoint}/${projectId}/jobs`, JSON.stringify(params.export()));
        });
    }
    getJob(projectId, translationJobUid) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("get", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}`);
        });
    }
    getJobFiles(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("get", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/files`, params.export());
        });
    }
    listJobs(projectId, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("get", `${this.entrypoint}/${projectId}/jobs`, params.export());
        });
    }
    searchJobs(projectId, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("post", `${this.entrypoint}/${projectId}/jobs/search`, JSON.stringify(params.export()));
        });
    }
    removeFileFromJob(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("post", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/file/remove`, JSON.stringify(params.export()));
        });
    }
    getJobProgress(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("get", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/progress`, params.export());
        });
    }
    getJobFileProgress(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.makeRequest("get", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/file/progress`, params.export());
        });
    }
    cancelJob(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.makeRequest("post", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/cancel`, JSON.stringify(params.export()));
        });
    }
    closeJob(projectId, translationJobUid, params) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.makeRequest("post", `${this.entrypoint}/${projectId}/jobs/${translationJobUid}/close`, JSON.stringify(params.export()));
        });
    }
}
exports.SmartlingJobsApi = SmartlingJobsApi;
//# sourceMappingURL=index.js.map