import { SmartlingBaseApi } from "../base/index";
import { SmartlingAuthApi } from "../auth/index";
import { ContextUploadParameters } from "./params/context-upload-parameters";
import { ContextDto } from "./dto/context-dto";
import { ContextAutomaticMatchParameters } from "./params/context-automatic-match-parameters";
import { ContextMatchAsyncDto } from "./dto/context-match-async-dto";
import { CreateBindingsParameters } from "./params/create-bindings-parameters";
import { ContextSourceDto } from "./dto/context-source-dto";
import { ContextHttpResponse } from "./context-http-response";
import { ListParameters } from "./params/list-parameters";
import { Logger } from "../logger";
export declare class SmartlingContextApi extends SmartlingBaseApi {
    constructor(smartlingApiBaseUrl: string, authApi: SmartlingAuthApi, logger: Logger);
    upload(projectId: string, params: ContextUploadParameters, contextSource?: ContextSourceDto): Promise<ContextDto>;
    delete(projectId: string, contextUid: string): Promise<boolean>;
    listContexts(projectId: string, params: ListParameters): Promise<ContextHttpResponse<ContextDto>>;
    runAutomaticMatch(projectId: string, contextUid: string, params: ContextAutomaticMatchParameters): Promise<ContextMatchAsyncDto>;
    createStringsToContextBindings(projectId: string, params: CreateBindingsParameters): Promise<boolean>;
    alterRequestData(uri: string, opts: Record<string, unknown>): Record<string, unknown>;
}
