"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SmartlingApiClientBuilder = void 0;
const index_1 = require("../auth/index");
const packageJson = require("../../package.json");
class SmartlingApiClientBuilder {
    constructor() {
        this.authApiClient = null;
        this.userId = null;
        this.userSecret = null;
        this.httpClientOptions = {};
        this.clientLibId = packageJson.name;
        this.clientLibVersion = packageJson.version;
        this.logger = {
            debug: () => { },
            warn: () => { },
            error: () => { }
        };
    }
    setLogger(logger) {
        this.logger = logger;
        return this;
    }
    setBaseSmartlingApiUrl(baseSmartlingApiUrl) {
        this.baseSmartlingApiUrl = baseSmartlingApiUrl;
        return this;
    }
    setHttpClientConfiguration(httpClientOptions) {
        this.httpClientOptions = httpClientOptions;
        return this;
    }
    setClientLibMetadata(clientLibId, clientLibVersion) {
        this.clientLibId = clientLibId;
        this.clientLibVersion = clientLibVersion;
        return this;
    }
    authWithUserIdAndUserSecret(userId, userSecret) {
        this.userId = userId;
        this.userSecret = userSecret;
        return this;
    }
    authWithAuthApiClient(authApiClient) {
        this.authApiClient = authApiClient;
        return this;
    }
    build(constructor) {
        if (this.authApiClient === null && this.userId !== null && this.userSecret !== null) {
            this.authApiClient = new index_1.SmartlingAuthApi(this.baseSmartlingApiUrl, this.userId, this.userSecret, this.logger);
            this.authApiClient.setClientLibId(this.clientLibId);
            this.authApiClient.setClientLibVersion(this.clientLibVersion);
            this.authApiClient.setOptions(this.httpClientOptions);
        }
        const instance = new constructor(this.baseSmartlingApiUrl, this.authApiClient, this.logger);
        instance.setClientLibId(this.clientLibId);
        instance.setClientLibVersion(this.clientLibVersion);
        instance.setOptions(this.httpClientOptions);
        return instance;
    }
}
exports.SmartlingApiClientBuilder = SmartlingApiClientBuilder;
//# sourceMappingURL=index.js.map